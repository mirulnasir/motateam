 <script>
    (async () => {
     	const storageKey = "BO_users";
      const shopDomain = '{{shop.permanent_domain}}';
      const shopDomainForUserId = '{{shop.domain}}'.split('.')[0];
		  const getCurrentSessionId = function() {
            var sessionId = "guest";
            var coockie = document.cookie;
            var coockieArr = coockie.split(";")
            var coockieObj = {};
            coockieArr.forEach(function(equal) {
                var arr = equal.split("="); 
                var key = arr[0]; 
                var value =arr[1]; 
                coockieObj[key.trim()]=value;
            });
            function guid() {
              function s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
                    .toString(16)
                    .substring(1);
              }
              return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
            };
            sessionId = 
              coockieObj["_shopify_y"] || 
              coockieObj["_y"] || 
              coockieObj["_shopify_s"] || 
              coockieObj["_s"] || 
              coockieObj["__ssid"] || guid();
          
            sessionId = "shopify_" + sessionId;
            return sessionId;
        };                 
     
      const sessionId = getCurrentSessionId();
    	const userId = {% if customer != null %} 'shopify_' + shopDomainForUserId + '_{{ customer.id }}' {% else %} sessionId {% endif %};
    
    	const backendBaseUrl = "https://customerscanvashub.com/"; 
    
        const makeRequest = async (url, data, parseResponse) => {
        	const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
          if (parseResponse !== false) {
            return await response.json();
          }
        };
    	
    	const onLogin = async () => {
        const url = backendBaseUrl + "api/v1/tenants/1255/integrations/onlogin";
        const model = { 
        ecommerceDomain: shopDomain,
				shopDomain: shopDomain,
        userGuid: sessionId,
      	shopifySessionOrUserGuid: sessionId,
        origin: window.location.origin,      
        id: userId,
        email: '{{customer.email}}',
        firstName: '{{ customer.first_name }}',
        lastName: '{{ customer.last_name }}'
      };
          	
          	return await makeRequest(url, model, false);
    	};
    		
    	const getToken = async ()=> {
          	const url = backendBaseUrl + "api/v1/tenants/1255/integrations/gettoken";
		  	const model = {
    			ecommerceDomain: shopDomain,
      		userGuid: userId,
          origin: window.location.origin, 
    		};
    		return await makeRequest(url, model);
    	};	
    
    	const getUserValueFromStorage = (key) => {
          window.localStorage[storageKey] = window.localStorage[storageKey] || "{}";
          const data = JSON.parse(window.localStorage[storageKey]);
          return data[key];
    	};
    
    	const setUserValueToStorage = (key, value) => {
          window.localStorage[storageKey] = window.localStorage[storageKey] || "{}";
          const data = JSON.parse(window.localStorage[storageKey]);
          data[key] = value;
          window.localStorage[storageKey] = JSON.stringify(data);
    	};

    	{% if customer %}
    		const prevValue = getUserValueFromStorage(sessionId);
    		if (!prevValue || prevValue.type === "guest") {
      			const response = await onLogin();
    		}
    		setUserValueToStorage(sessionId, { type: "user", date: Date.now()});
    	{% else %}
    		setUserValueToStorage(sessionId, { type: "guest", date: Date.now()});
    	{% endif %}
    })();
  </script>